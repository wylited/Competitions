openapi: 3.0.3
info:
  title: Competition Scraper API
  description: A REST API for scraping and managing competition announcements from various sources including HKU, HKUST, and CTFTime.
  version: 1.0.0
  contact:
    name: API Support
    email: support@example.com

servers:
  - url: http://localhost:3000
    description: Development server
  - url: https://api.competition-scraper.com
    description: Production server

paths:
  /:
    get:
      summary: Health check
      description: Returns the health status of the API
      responses:
        '200':
          description: API is running
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseString'

  /health:
    get:
      summary: Health check
      description: Returns the health status of the API
      responses:
        '200':
          description: API is running
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseString'

  /competitions:
    get:
      summary: Get all competitions
      description: Retrieve all competitions with optional filtering and pagination
      parameters:
        - name: page
          in: query
          description: Page number for pagination
          required: false
          schema:
            type: integer
            minimum: 1
            default: 1
        - name: limit
          in: query
          description: Number of items per page
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 10
        - name: status
          in: query
          description: Filter by status
          required: false
          schema:
            type: string
            enum: [upcoming, active, completed, cancelled]
        - name: host
          in: query
          description: Filter by host organization
          required: false
          schema:
            type: string
        - name: date_from
          in: query
          description: Filter competitions from a specific date (RFC3339 format)
          required: false
          schema:
            type: string
            format: date-time
        - name: date_to
          in: query
          description: Filter competitions up to a specific date (RFC3339 format)
          required: false
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: List of competitions retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    $ref: '#/components/schemas/PaginatedCompetitions'
                  message:
                    type: string
        '400':
          description: Invalid query parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseString'
    post:
      summary: Create a new competition
      description: Create a new competition entry
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Competition'
      responses:
        '200':
          description: Competition created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseCompetition'
        '400':
          description: Invalid competition data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseString'

  /competitions/{id}:
    get:
      summary: Get a specific competition
      description: Retrieve a competition by its ID
      parameters:
        - name: id
          in: path
          required: true
          description: Competition ID
          schema:
            type: string
      responses:
        '200':
          description: Competition retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseCompetition'
        '404':
          description: Competition not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseString'
    put:
      summary: Update a competition
      description: Update an existing competition by its ID
      parameters:
        - name: id
          in: path
          required: true
          description: Competition ID
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Competition'
      responses:
        '200':
          description: Competition updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseCompetition'
        '404':
          description: Competition not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseString'
    delete:
      summary: Delete a competition
      description: Delete a competition by its ID
      parameters:
        - name: id
          in: path
          required: true
          description: Competition ID
          schema:
            type: string
      responses:
        '200':
          description: Competition deleted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseString'
        '404':
          description: Competition not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseString'

  /scrapers:
    get:
      summary: List available scrapers
      description: Get a list of all registered scrapers
      responses:
        '200':
          description: List of scrapers retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: array
                    items:
                      type: string
                  message:
                    type: string
    post:
      summary: Run all scrapers
      description: Execute all registered scrapers to update competition data
      responses:
        '200':
          description: All scrapers executed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseString'
        '500':
          description: Error running scrapers
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseString'

  /scrapers/{name}:
    post:
      summary: Run specific scraper
      description: Execute a specific scraper by name
      parameters:
        - name: name
          in: path
          required: true
          description: Name of the scraper to run
          schema:
            type: string
            enum: [hku, hkust, ctftime]
      responses:
        '200':
          description: Scraper executed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseString'
        '404':
          description: Scraper not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseString'
        '500':
          description: Error running scraper
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseString'

components:
  schemas:
    Competition:
      type: object
      required:
        - name
        - date
        - host
        - source
      properties:
        _id:
          type: string
          description: MongoDB ObjectId
          example: "507f1f77bcf86cd799439011"
        name:
          type: string
          description: Name of the competition
          example: "Annual Programming Contest [HKU]"
        date:
          type: string
          format: date-time
          description: Date of the competition
          example: "2023-10-15T10:00:00Z"
        host:
          type: string
          description: Host organization
          example: "HKU"
        source:
          type: string
          description: Source of the competition data
          example: "HKU,CTFTime"
        description:
          type: string
          description: Description of the competition
          example: "Annual programming contest for university students"
        signup_deadline:
          type: string
          format: date-time
          description: Signup deadline for the competition
          example: "2023-09-30T23:59:59Z"
        location:
          type: string
          description: Location of the competition
          example: "Online"
        registration_link:
          type: string
          format: uri
          description: Link to register for the competition
          example: "https://example.com/register"
        max_participants:
          type: integer
          description: Maximum number of participants
          example: 100
        status:
          type: string
          description: Status of the competition
          example: "upcoming"
          enum: [upcoming, active, completed, cancelled]

    ApiResponseCompetition:
      type: object
      properties:
        success:
          type: boolean
        data:
          $ref: '#/components/schemas/Competition'
        message:
          type: string

    ApiResponseString:
      type: object
      properties:
        success:
          type: boolean
        data:
          type: string
        message:
          type: string

    PaginatedCompetitions:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Competition'
        page:
          type: integer
          example: 1
        limit:
          type: integer
          example: 10
        total:
          type: integer
          example: 100

    ApiResponsePaginatedCompetitions:
      type: object
      properties:
        success:
          type: boolean
        data:
          $ref: '#/components/schemas/PaginatedCompetitions'
        message:
          type: string

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

security:
  - bearerAuth: []